"""
Autogenerate docstrings.

The script loops over pages in `PAGES`. For each pair of `page` and
`source_pages`, it does the following:

1. Copy the file `'tex/api' + page` into a file `'build/' + page`.
   If the file does not exist, generate the new file from scratch
   (this new file only contains the keyword `{{autogenerated}}`).
2. Generate all docstrings in `source_pages`.
3. Replace `{{autogenerated}}` in the new file with the generated docstrings.
"""
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

PAGES = [
  {
    'page': 'criticism.tex',
    'source_pages': [
      'criticisms/',
    ],
    'child_pages': [],
  },
  {
    'page': 'data.tex',
    'source_pages': [],
    'child_pages': [],
  },
  {
    'page': 'inference.tex',
    'source_pages': [
      'inferences/inference.py',
    ],
    'child_pages': [
      'monte-carlo.tex',
      'variational-inference.tex',
    ],
  },
  {
    'page': 'monte-carlo.tex',
    'source_pages': [
      'inferences/monte_carlo.py',
    ],
    'child_pages': [],
  },
  {
    'page': 'variational-inference.tex',
    'source_pages': [
      'inferences/klpq.py',
      'inferences/klqp.py',
      'inferences/map.py',
      'inferences/variational_inference.py',
    ],
    'child_pages': [],
  },
  {
    'page': 'model.tex',
    'source_pages': [
      'models/',
    ],
    'child_pages': [],
  },
  {
    'page': 'stats.tex',
    'source_pages': [
      'stats/',
    ],
    'child_pages': [],
  },
  {
    'page': 'util.tex',
    'source_pages': [
      'util.py',
    ],
    'child_pages': [],
  },
]
